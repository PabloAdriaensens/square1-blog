version: '3.5'

services:
  square1-blog-php81-symfony54:
    container_name: square1-blog-php81-symfony54
    build:
      context: ./docker
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=square1-blog-php81-symfony54
    ports:
      - '1000:8000'
    networks:
      - square1-blog-php81-symfony54-network
    depends_on:
      - square1-blog-php81-symfony54-postgres

  square1-blog-php81-symfony54-postgres:
    container_name: square1-blog-php81-symfony54-postgres
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: passwd
      POSTGRES_DB: postgres_square1
    volumes:
      - square1-blog-php81-symfony54-pgsql-data:/var/lib/postgresql/data
    networks:
      - square1-blog-php81-symfony54-network


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  square1-blog-php81-symfony54-network:

volumes:
  square1-blog-php81-symfony54-pgsql-data:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
